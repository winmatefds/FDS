//
//	Paradigm LOCATE configuration file for a Paradigm C++ 16-bit embedded
// system application.  This general purpose configuration file can be
// used with a standalone target or with a PDREMOTE/ROM target.
//
cputype	Turbo186								// Select the target system processor

//******************************************************************************
//  I N C L U D E    F I L E S
//******************************************************************************
//
// used for system specific configuration (Board name, XROM size)
//
#include ".\LowPowerMonitor\Lpm_System.h"          // System configration

//******************************************************************************
//  D E B U G   F I L E S
//******************************************************************************

absfile	axe86								// Paradigm C++ debugging output
listfile	segments					\		// Absolute segment map
			publics by address	\
			symbols					\
			lines						\
			regions

//******************************************************************************
//  O U T P U T    H E X    F I L E
//******************************************************************************
hexfile intel386 filename = ./object/LpmSTDP93xx.hex

hexfile		binary                               \
            offset = 0xf4000                     \
      		size = 48                            \
            fill = 0ffh                          \
            filename	=	./object/LpmSTDP93xx.bin

warnings    -w1002        // Disable the "Assume absoulte" warning
warnings    -w1033        // Disable the "Class "xxx" not named in an OUTPUT directive" warning
//******************************************************************************
//  S R A M    M E M O R Y    M A P
//******************************************************************************
//
//    Define how the target system address space is
//    partitioned.  Paradigm LOCATE will check that this
//    mapping is followed.
//

map	0x00000 to 0x01fff as iram					// interrupt vector(96 bytes) + data
map	0xf6000 to 0xfffef as rdonly          	// data + code + stack
map	0xffff0 to 0xfffff as rdonly				// reset (16 bytes)

//
// Start of common configuration file settings.
//

dup		DATA ROMDATA						// Make a copy of initialized data
//dup		FAR_DATA ROMFARDATA				// Make a copy of far initialized data
class		INT_TABLE = 0x0
class		CODE = 0xf600                  // In order to match simulation code
class		START = 0xffff

order		INT_TABLE						\
         DATA                       \
			BSS								\
         NVRAM                      \
         STACK

order CODE ROMDATA ENDROMDATA

output CODE ROMDATA START

